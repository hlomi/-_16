//У даному двовимірному масиві p[3 * 5] відсортувати за спаданням елементи
//кожного рядка.

#include <algorithm>//бібліотека для "sort"
#include <iostream>//бібліотека мови
#include <ctime> //бібліотека для випадкових чисел

const int rows = 3;//кількість рядів
const int columns = 5;//стовпів

void printArray(int p[rows][columns]) {//змінна воід - бо немає виводу чисел в даний момент
    for (int i = 0; i < rows; i++) {//цикл для обробки всіх даних в масиві для рядків
        for (int j = 0; j < columns; j++) {//аналогічно для стовпців
            std::cout << p[i][j] << " ";//вивести масив
        }
        std::cout << std::endl;// Функція для виведення двовимірного масиву
    }
}

bool compare(int a, int b) {
    return a > b;
}// Функція порівняння для сортування в порядку спадання

void sortRows(int p[rows][columns]) {
    for (int i = 0; i < rows; i++) {
        std::sort(p[i], p[i] + columns, compare);// Функція для сортування кожного рядка в порядку спадання
    }
}

int main() { //оголошення меін
    setlocale(LC_ALL, "ukr");//локалізація
    int p[rows][columns];//оголошення масиву
    std::srand(std::time(0));//встановлює початкове значення для генерації коду

    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < columns; j++) {
            p[i][j] = std::rand() % 100;  // Генерація випадкового числа від 0 до 99
        }// Заповнення масиву випадковими значеннями
    }

    std::cout << "Масив до сортування:\n";
    printArray(p);//вивести масив

    sortRows(p); // Сортування кожного рядка в порядку спадання

    std::cout << "\nПісля сортування за спаданням в кожному рядку:\n";
    printArray(p);//вивести масив після сортування

    return 0;//вивести 0 - як кінець операції
}
